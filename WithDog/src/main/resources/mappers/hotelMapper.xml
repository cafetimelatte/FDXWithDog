<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.withdog.mapper.hotelMapper">
	<!-- 
	<select resultType="com.test.dto.HotelDto" id="getHotelList">
		select * from hotel
	</select>
	 -->
	<select resultType="com.withdog.dto.HotelDto" id="getHotelList" parameterType="com.withdog.dto.CriteriaDto">
		<choose>
		<when test="order == 'recent'">
			select h_id, h_name, h_info, h_img
from (select rownum num, h.*
from (select * from hotel<choose><when test="category == 'h_name'">where h_name like '%'||#{field}||'%'</when><when test="category == 'add'">where h_add1 like '%'||#{field}||'%' or h_add2 like '%'||#{field}||'%' or h_add3 like '%'||#{field}||'%'</when></choose>order by h_regiDate desc) h) where num between #{pageStart} and #{pageEnd}
		</when>
		<when test="order == 'review'">
			select h.h_id h_id, h.h_name h_name, h.h_info h_info, h.h_img h_img
from (select rownum num, h1.h_id h_id, h1.h_name h_name, h1.h_info h_info, h1.h_img h_img
from (select mb.h_id h_id, sum(case when r.mbre_id is null then 0
else 1
end) as repNum
from mainBoard mb left join mbreply r
on mb.mb_id = r.mb_id
group by mb.h_id
order by repNum desc) rnk right join hotel h1
on rnk.h_id = h1.h_id<choose><when test="category == 'h_name'">where h_name like '%'||#{field}||'%'</when><when test="category == 'add'">where h_add1 like '%'||#{field}||'%' or h_add2 like '%'||#{field}||'%' or h_add3 like '%'||#{field}||'%'</when></choose>) h where h.num between #{pageStart} and #{pageEnd}
			</when>
		</choose>
	</select>
	
	<select resultType="com.withdog.dto.HotelDto" id="getHotelDetail" parameterType="int">
		select * from hotel where h_id = #{h_id}
	</select>
	
<!-- 	<select resultType="int" id="getHotelCount">
		select count(h_id) from hotel
	</select> -->
	
	<select resultType="int" id="getHotelCount" parameterType="map">
		select count(h_id) from hotel<choose><when test="category == 'add'">where h_add1 like '%'||#{field}||'%' or h_add2 like '%'||#{field}||'%' or h_add3 like '%'||#{field}||'%'</when><when test="category == 'h_name'">where h_name like '%'||#{field}||'%'</when></choose>
	</select>
	
	<delete id="deleteHotel" parameterType="int">
		delete from hotel where h_id = #{h_id}
	</delete>
	
	<update id="updateHotel" parameterType="com.withdog.dto.HotelDto">
		update hotel
		set h_name = #{h_name}, h_info = #{h_info}, h_detail = #{h_detail}, h_phone = #{h_phone}, h_web = #{h_web}, h_chkInTime = #{h_chkInTime}, h_chkOutTime = #{h_chkOutTime}, h_add1 = #{h_add1}, h_add2 = #{h_add2}, h_add3 = #{h_add3}, h_img = #{h_img}, h_price = #{h_price}, h_petSize = #{h_petSize}, h_petWeight = #{h_petWeight}, h_etc = #{h_etc}
		where h_id = #{h_id}
	</update>
	
	<update id="updateImage" parameterType="map">
		update hotel set
		<if test="h_img!=null">
			h_img = #{dbIn}
		</if>
		<if test="h_detail!=null">
			h_detail = #{dbIn}
		</if>
		 where h_id = #{h_id}
	</update>
	
	<select id="selectNextVal" resultType="int">
		select h_seq.nextval from dual
	</select>
	
	<insert id="insertHotel" parameterType="com.withdog.dto.HotelDto">
		insert into hotel
		values (#{h_id}, #{h_name}, #{h_info}, #{h_detail}, #{h_phone}, #{h_web}, #{h_chkInTime}, #{h_chkOutTime}, #{h_add1}, #{h_add2}, #{h_add3}, #{h_img}, #{h_price}, default, #{h_petSize}, #{h_petWeight}, #{h_etc})
	</insert>

</mapper>